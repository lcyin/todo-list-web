{
    "openapi": "3.0.0",
    "info": {
        "title": "Todo List API",
        "version": "1.0.0",
        "description": "A RESTful API for managing todo lists and tasks built with TypeScript and Express",
        "contact": {
            "name": "API Support",
            "email": "support@todoapi.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Development server"
        },
        {
            "url": "https://api.todolist.com",
            "description": "Production server"
        }
    ],
    "tags": [
        {
            "name": "Health",
            "description": "Health check endpoints"
        },
        {
            "name": "Todos",
            "description": "Todo management endpoints"
        }
    ],
    "components": {
        "schemas": {
            "Todo": {
                "type": "object",
                "required": [
                    "id",
                    "title",
                    "completed",
                    "createdAt",
                    "updatedAt"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the todo",
                        "example": "todo-123"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "Title of the todo",
                        "example": "Complete project documentation"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 1000,
                        "description": "Optional description of the todo",
                        "example": "Write comprehensive documentation for the todo API project"
                    },
                    "completed": {
                        "type": "boolean",
                        "description": "Whether the todo is completed",
                        "example": false
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp",
                        "example": "2024-01-01T12:00:00.000Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Last update timestamp",
                        "example": "2024-01-01T12:00:00.000Z"
                    }
                }
            },
            "CreateTodoRequest": {
                "type": "object",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "Title of the todo",
                        "example": "Complete project documentation"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 1000,
                        "description": "Optional description of the todo",
                        "example": "Write comprehensive documentation for the todo API project"
                    }
                }
            },
            "UpdateTodoRequest": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200,
                        "description": "Title of the todo",
                        "example": "Complete project documentation"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "maxLength": 1000,
                        "description": "Optional description of the todo",
                        "example": "Write comprehensive documentation for the todo API project"
                    },
                    "completed": {
                        "type": "boolean",
                        "description": "Whether the todo is completed",
                        "example": true
                    }
                }
            },
            "TodosResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "page": {
                                "type": "integer",
                                "example": 1
                            },
                            "limit": {
                                "type": "integer",
                                "example": 10
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            },
                            "totalPages": {
                                "type": "integer",
                                "example": 10
                            }
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string",
                                "description": "Error code",
                                "example": "TODO_NOT_FOUND"
                            },
                            "message": {
                                "type": "string",
                                "description": "Human readable error message",
                                "example": "Todo with id \"123\" not found"
                            },
                            "details": {
                                "type": "object",
                                "description": "Additional error details"
                            }
                        }
                    }
                }
            },
            "HealthResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "healthy"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00.000Z"
                    },
                    "message": {
                        "type": "string",
                        "example": "Todo List API is running"
                    }
                }
            }
        },
        "responses": {
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "paths": {
        "/api/v1/health": {
            "get": {
                "summary": "Get application health status",
                "description": "Returns the health status of the application for monitoring and load balancing",
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "Application is healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/api/v1/health/readiness": {
            "get": {
                "summary": "Get application readiness status",
                "description": "Kubernetes readiness probe endpoint - indicates if the application is ready to serve traffic",
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "Application is ready",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/api/v1/health/liveness": {
            "get": {
                "summary": "Get application liveness status",
                "description": "Kubernetes liveness probe endpoint - indicates if the application is alive",
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "Application is alive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/api/v1/todos": {
            "get": {
                "summary": "Get all todos",
                "description": "Retrieve a paginated list of todos with optional filtering",
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1
                        },
                        "description": "Page number for pagination"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 100,
                            "default": 10
                        },
                        "description": "Number of items per page"
                    },
                    {
                        "in": "query",
                        "name": "completed",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Filter by completion status"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search in title and description"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of todos retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodosResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "post": {
                "summary": "Create a new todo",
                "description": "Create a new todo item with title and optional description",
                "tags": [
                    "Todos"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTodoRequest"
                            },
                            "examples": {
                                "simple": {
                                    "summary": "Simple todo with title only",
                                    "value": {
                                        "title": "Complete project documentation"
                                    }
                                },
                                "detailed": {
                                    "summary": "Todo with title and description",
                                    "value": {
                                        "title": "Complete project documentation",
                                        "description": "Write comprehensive documentation for the todo API project"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Todo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/api/v1/todos/{id}": {
            "get": {
                "summary": "Get a todo by ID",
                "description": "Retrieve a specific todo by its unique identifier",
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Unique identifier of the todo",
                        "example": "todo-123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "summary": "Update a todo",
                "description": "Update an existing todo with new information",
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Unique identifier of the todo",
                        "example": "todo-123"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTodoRequest"
                            },
                            "examples": {
                                "title_only": {
                                    "summary": "Update title only",
                                    "value": {
                                        "title": "Updated todo title"
                                    }
                                },
                                "complete_todo": {
                                    "summary": "Mark as completed",
                                    "value": {
                                        "completed": true
                                    }
                                },
                                "full_update": {
                                    "summary": "Update all fields",
                                    "value": {
                                        "title": "Updated todo title",
                                        "description": "Updated description",
                                        "completed": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Todo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Todo"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "summary": "Delete a todo",
                "description": "Delete a specific todo by its unique identifier",
                "tags": [
                    "Todos"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Unique identifier of the todo",
                        "example": "todo-123"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Todo deleted successfully (no content)"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    }
}